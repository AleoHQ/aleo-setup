[package]
name = "phase2"
version = "0.3.0"
authors = ["Sean Bowe <ewillbefull@gmail.com>", "The Aleo Team <hello@aleo.org>"]
description = "Library for performing MPCs for creating zk-SNARK public parameters"
homepage = "https://github.com/AleoHQ/aleo-setup"
repository = "https://github.com/AleoHQ/aleo-setup"
license = "MIT/Apache-2.0"
edition = "2018"

[lib]
crate-type = ["cdylib", "lib"]

[dependencies]
setup-utils = { path = "../setup-utils", default-features = false }

byteorder = { version = "1.3.4" }
cfg-if = { version = "0.1.10" }
crossbeam = { version = "0.8" }
itertools = { version = "0.9.0", optional = true }
num_cpus = { version = "1" }
rand = { version = "0.8" }
rayon = { version = "1.4.1", optional = true }
tracing = { version = "0.1.21" }
wasm-bindgen = { version = "0.2.69", features=["serde-serialize"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

web-sys = { version = "0.3", features = ["console"], optional = true }

snarkvm-algorithms = { version = "0.6" }
snarkvm-curves = { version = "0.6" }
snarkvm-gadgets = { version = "0.6" }
snarkvm-r1cs = { version = "0.6"}
snarkvm-parameters = { version = "0.6" }
snarkvm-fields = { version = "0.6" }
snarkvm-utilities = { version = "0.6" }

[dev-dependencies]
phase1 = { path = "../phase1", features = ["testing"] }
phase2 = { path = "./", features = ["testing"] }
wasm-bindgen-test = { version = "0.3.18" }

rusty-hook = { version = "0.11.2" }
tracing-subscriber = { version = "0.2.3" }

[features]
default = []
testing = ["parallel"]
parallel = ["rayon", "setup-utils/parallel"]

cli = ["setup-utils/cli"]
wasm = ["console_error_panic_hook", "itertools", "web-sys", "setup-utils/wasm"]
